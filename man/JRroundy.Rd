% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JRroundy.R
\name{JRroundy}
\alias{JRroundy}
\title{Joint Replenishment - Roundy's 98\% Approximation}
\usage{
JRroundy(d, A, h, a, q = 1)
}
\arguments{
\item{{d}}{{demand per time unit for each item}}

\item{{A}}{{set up cost for the group}}

\item{{h}}{{holding cost per item unit and time unit}}

\item{{a}}{{set up cost per item}}

\item{{q}}{{the basic period to be used in power two cycle times, default 1}}
}
\value{
A list containing
\itemize{
\item{Table} {a data frame containing
\itemize{
\item{Product} {numbers the products}
\item{Order} {indices the products in increasing order of η\link{i}}
\item{Group} {assigns products to groups, group 0 being the aggregate group}
\item{CycleTimes} {are NOT of power of two}
\item{Power} {lists the exponents of 2 for powe of two cycle times}
\item{PowerTwoTimes} {lists the power of two cycle times}
}}
\item{LBD} {a Lagrangian lower bound on the optimal cost}
\item{UBD} {an upper bound on the optimal cost}
}
}
\description{
A deterministic joint replenishment model is considered in which
there is a joint set up cost independent of the number of items ordered
olus individual set up costs for each item. Cycle times (and, consequently,
batch quantities) are assumed constant. No backorders are allowed and the
production time is being disregarded. The problem is to determine the cycle
times that minimize the sum of holding and setup costs.
See section 7.3  in Axsäter's book for more information.

Roundy's 98\% approximation algorithm is a Lagrangian relaxation approach which
produces cycle times that are power of two multiples of a basic cycle time. The
approach guarantees that the obtained solution has a cost which is at most 2\% higher
than the optimal cost. See section 7.3.1.2 in Axsäter for more information.
}
\examples{
## ** Example based on Example 7.3 in Axsäter **
## Four item with joint set up cost $300 and equal individual set up
## and holding costs of $50 and $10 respectively. The demand for the
## four items are 5000, 1000, 700 and 100 respectively.
##
JRroundy(d=c(5000,1000,700,100),A=300,h=c(10,10,10,10),a=c(50,50,50,50))
##
##
JRroundy(d=c(5000,1000,700,100),A=300,h=c(10,10,10,10),a=c(50,50,50,50), q=1.88)

}
\seealso{
JRiter
}
\author{
Athanasios Migdalas, \email{athmig59@gmail.com}
}
